name: Build and upload Python package to GitHub releases

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Compare versions in setup.py and knowledge_storm/__init__.py
        run: |
          VERSION_SETUP=$(grep -oP '(?<=version=\").*(?=\")' setup.py)
          VERSION_INIT=$(grep -oP '(?<=__version__ = \").*(?=\")' knowledge_storm/__init__.py)
          echo "Version in setup.py: $VERSION_SETUP"
          echo "Version in __init__.py: $VERSION_INIT"
          if [ "$VERSION_SETUP" != "$VERSION_INIT" ]; then
            echo "Error: Version mismatch between setup.py ($VERSION_SETUP) and knowledge_storm/__init__.py ($VERSION_INIT)"
            exit 1
          fi
        shell: bash
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build package
        run: python3 setup.py sdist bdist_wheel
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            Python package release v${{ github.run_number }}
            
            Built from commit: ${{ github.sha }}
          draft: false
          prerelease: false
      - name: Upload package to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.whl
          asset_name: knowledge_storm-${{ github.run_number }}-py3-none-any.whl
          asset_content_type: application/octet-stream
      - name: Upload source distribution to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.tar.gz
          asset_name: knowledge_storm-${{ github.run_number }}.tar.gz
          asset_content_type: application/gzip
